{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction RegistrationComponent_p_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.firstNameError, \" \");\n  }\n}\nfunction RegistrationComponent_p_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.lastNameError, \" \");\n  }\n}\nfunction RegistrationComponent_p_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.emailError, \" \");\n  }\n}\nfunction RegistrationComponent_p_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.passwordError, \" \");\n  }\n}\nfunction RegistrationComponent_p_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.confirmpasswordError, \" \");\n  }\n}\nexport class RegistrationComponent {\n  constructor(router) {\n    this.router = router;\n    this.title = 'Tutorial3';\n    this.firstNameError = '';\n    this.lastNameError = '';\n    this.emailError = '';\n    this.passwordError = '';\n    this.confirmpasswordError = '';\n  }\n  ngOnInit() {\n    this.registrationForm = new FormGroup({\n      firstName: new FormControl(\"\", [Validators.required]),\n      lastName: new FormControl(\"\", [Validators.required]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(6)]),\n      confirmpassword: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\n    });\n  }\n  onSubmit(registrationForm) {\n    this.firstNameError = '';\n    this.lastNameError = '';\n    this.emailError = '';\n    this.passwordError = '';\n    this.confirmpasswordError = '';\n    const check = this.checkControls();\n    const check2 = this.checkPassword();\n    if (this.registrationForm.valid && check && check2) {\n      this.router.navigate(['/profile'], {\n        queryParams: registrationForm.value\n      });\n    }\n  }\n  checkPassword() {\n    if (this.registrationForm.value.password != this.registrationForm.value.confirmpassword) {\n      this.passwordError = \"Password should match.\";\n      this.confirmpasswordError = \"Password should match.\";\n      return false;\n    }\n    return true;\n  }\n  checkControls() {\n    const errors = this.registrationForm.controls;\n    let flag = false;\n    for (const error in errors) {\n      if (this.registrationForm.controls['firstName'].errors?.['required']) {\n        this.firstNameError = \"Please enter the First Name.\";\n        flag = true;\n      }\n      if (this.registrationForm.controls['lastName'].errors?.['required']) {\n        this.lastNameError = \"Please enter the Last Name.\";\n        flag = true;\n      }\n      if (this.registrationForm.controls['email'].errors?.['required']) {\n        this.emailError = \"Please enter the E-mail.\";\n        flag = true;\n      }\n      if (this.registrationForm.controls['email'].errors?.['email']) {\n        this.emailError = \"Please enter correct E-mail address\";\n        flag = true;\n      }\n      if (this.registrationForm.controls['password'].errors?.['required']) {\n        this.passwordError = \"Please enter the Password.\";\n        flag = true;\n      }\n      if (this.registrationForm.controls['password'].errors?.['minlength']) {\n        this.passwordError = \"Password Length should be minimum 6 char long.\";\n        flag = true;\n      }\n      if (this.registrationForm.controls['confirmpassword'].errors?.['required']) {\n        this.confirmpasswordError = \"Please enter the confirm password.\";\n        flag = true;\n      }\n      if (this.registrationForm.controls['confirmpassword'].errors?.['minlength']) {\n        this.confirmpasswordError = \"Password Length should be minimum 6 char long.\";\n        flag = true;\n      }\n    }\n    if (flag) {\n      return false;\n    }\n    return true;\n  }\n}\nRegistrationComponent.ɵfac = function RegistrationComponent_Factory(t) {\n  return new (t || RegistrationComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nRegistrationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegistrationComponent,\n  selectors: [[\"app-registration\"]],\n  decls: 35,\n  vars: 6,\n  consts: [[1, \"form\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"firstName\"], [\"style\", \"color:red\", 4, \"ngIf\"], [\"formControlName\", \"lastName\"], [\"formControlName\", \"email\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"password\", \"formControlName\", \"confirmpassword\"], [\"type\", \"submit\"], [2, \"color\", \"red\"]],\n  template: function RegistrationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"section\", 0)(1, \"h1\");\n      i0.ɵɵtext(2, \"Profile Registration\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function RegistrationComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.onSubmit(ctx.registrationForm);\n      });\n      i0.ɵɵelementStart(4, \"label\");\n      i0.ɵɵtext(5, \"First Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 2);\n      i0.ɵɵtemplate(7, RegistrationComponent_p_7_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelement(8, \"br\")(9, \"br\");\n      i0.ɵɵelementStart(10, \"label\");\n      i0.ɵɵtext(11, \"Last Name: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 4);\n      i0.ɵɵtemplate(13, RegistrationComponent_p_13_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelement(14, \"br\")(15, \"br\");\n      i0.ɵɵelementStart(16, \"label\");\n      i0.ɵɵtext(17, \"E-Mail: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 5);\n      i0.ɵɵtemplate(19, RegistrationComponent_p_19_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelement(20, \"br\")(21, \"br\");\n      i0.ɵɵelementStart(22, \"label\");\n      i0.ɵɵtext(23, \"Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(24, \"input\", 6);\n      i0.ɵɵtemplate(25, RegistrationComponent_p_25_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelement(26, \"br\")(27, \"br\");\n      i0.ɵɵelementStart(28, \"label\");\n      i0.ɵɵtext(29, \"Confirm Password: \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(30, \"input\", 7);\n      i0.ɵɵtemplate(31, RegistrationComponent_p_31_Template, 2, 1, \"p\", 3);\n      i0.ɵɵelement(32, \"br\")(33, \"br\")(34, \"input\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.registrationForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.firstNameError);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.lastNameError);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.emailError);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.passwordError);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.confirmpasswordError);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\".form[_ngcontent-%COMP%]{text-align:center;border:1px solid;padding:20px}\"]\n});","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}